    # Генератор списков
from random import randint

sp = [randint(1, 10) for _ in range(10)]
print(sp) # ~ [6, 10, 5, 2, 4, 4, 6, 6, 8, 7]

# Статичный рандом (вызывает один и тот же ряд)
import random

random.seed(42)
sp = [random.randint(1, 10) for _ in range(10)]
print(sp)

# Возводим каждый эл списока в квадрат
import random

sp = [1, 8, 7, 6, 10, 11, 14]
squares = [i**2 for i in sp]
print(squares)


# Возводим четные эл списока в квадрат
import random

sp = [1, 8, 7, 6, 10, 11, 14]
print([i**2 for i in sp if i % 2 == 0])


# Возводим четные эл списока в квадрат, а нечетные обнулить
import random

sp = [1, 8, 7, 6, 10, 11, 14]
print([i**2 if i % 2 == 0 else 0 for i in sp])


# Возводим четные эл списока в квадрат, а нечетные обнулить и сумируем результат
import random

sp = [1, 8, 7, 6, 10, 11, 14]
print(sum([i**2 if i % 2 == 0 else 0 for i in sp]))


    # Задача 39
# Даны 2а массива чмсел. Требуется вывести те эл первого массива (в том
# порядке, в каком они идут в 1м массиве), кторых нет во 2м массиве.
# Пользователь вводит число N - кол- во эл в 1м массиве, затем N чисел
# - эл массива. Затем число M - кол-во эл во 2м массиве, затем эл массива
# 7-> 3 1 3 4 2 4 12,   6-> 4 15 43 1 15 1  --->>> 3 3 2 12

n = int(input()) # Вводим кол-во эл 1го массива
list1 = list() # Создаем массив
for i in range(n): # С помощю цикла заполняем 1й массив
  x = int(input())
  list1.append(x)
m = int(input()) # Вводим кол-во эл 2го массива
list2 = list() # Создаем массив
for i in range(m): # С помощю цикла заполняем 2й массив
  x = int(input())
  list2.append(x)

count = 0 # В переменной count буем хранить 0 если нет повторений и 1 2 3..... если повторения есть
for i in range(n):
  for j in range(m):
    if list1[i] == list2[j]: # Каждый эл 1го массива сравниваем со всеми эл 2го
      count += 1
  if count == 0: # Если count = 0
    print(list1[i]) # То выподим эл 1го списка
  count = 0 # И обнуляем 


  # Решение Тимура в одну строку
sp1 = [3, 1, 3, 4, 2, 4, 12]
sp2 = [4, 15, 43, 1, 15, 1]

print([i for i in sp1 if i not in sp2]) # Выведите каждый эл 1го списка, если этого i не присутствует в списке 2
print([i for i in sp1 if i not in set(sp2)]) # Более эфективная конструкция, т.к. 2 список возращает множество



    # Задача 41
# Дан массив, состоящий из целых чисел. Напишите программу, которая в
# данном массмве определит кол-во эл, у которых 2 соседних и, при этом
# оба соседних эл меньше данного. Сначала вводится число N - кол-во эл
# в массиве. Далее записаны N чисел - эл массива. Массив целых чисел.
# 5->1 2 3 4 5 ->> 0
# 5->1 5 1 5 1 ->> 2

n = int(input())
list1 = []
for i in range(n):
  x = int(input())
  list1.append(x)

count = 0
for i in range(1, n - 1):
  if list1[i - 1] < list1[i] > list1[i + 1]:
    count +=1
print(count)

  # Решение Тимура в одну строку
sp = [1, 2, 3, 4, 5] # 0
# sp = [1, 5, 1, 5, 1] # 2

print(sum([1 for i in range(len(sp) -1) if sp[i] > sp[i + 1] and sp[i] > sp[i - 1]]))

  # Сделали код красивей
def find_champ(sp, index):
  if sp[index] > sp[index + 1] and sp[index] > sp[index - 1]:
    return True
  return False

sp1 = [1, 2, 3, 4, 5] # 0
print(sum([1 for i in range(len(sp1) -1) if find_champ(sp1, i)]))

sp2 = [1, 5, 1, 5, 1]  # 2
print(sum([1 for i in range(len(sp2) -1) if find_champ(sp2, i)]))

# Закольшовываем массив
def find_champ2(sp, index):
  if sp[index] > sp[(index + 1) % len(sp)] and sp[index] > sp[index - 1]:
    return True
  return False

sp1 = [1, 2, 3, 4, 5] # 1 
print(sum([1 for i in range(len(sp1)) if find_champ2(sp1, i)]))

sp2 = [1, 5, 1, 5, 1]  # 2
print(sum([1 for i in range(len(sp2)) if find_champ2(sp2, i)]))



    # Задача 43
# Дан список чисел. Посчитайте, сколько в нем пар эл, равных друг другу
# Считается, что любые 2 эл, равные друг другу образуют одну пару, 
# котрую необходимо посчитать. Вводиться список чисел. Все числа
# находятся на разных строках
# 1 2 3 2 3 ->> 2

list1 = [1, 2, 3, 2, 3]
count = 0
for i in range(len(list1)): # Идем по всему списку
  for j in range(i + 1, len(list1)): # Для того чтобы брать i и считать с кем есть пары
    if i != j and list1[i] == list1[j]:
      count += 1
print(count)


  # Решение Тимура в одну строку
sp = [1, 2, 3, 2, 3] # 2

# count - фенкция возращает кол-во, сколько раз встречается элемент в списке
print(sum([sp.count(i) // 2 for i in set(sp)])) # Берем sp.count(i) деленый на 2 из множества sp и сумируем результат



    # Задача 45
# 2а различных натур числа n и m называются дружественными, если сумма
# делителей числа n (включая 1, но исключая само n) равно числу m и
# наоборот. Например, 220 и 284 - дружкственные числа. По дан числу k
# выведите все пары дружеств чисел, каждое изкоторых не превосходит k.
# Программа получает на вход одно натур число k, не превосхожящее 10^5.
# Программа должна вывести все пары дружественных чисел, каждое из
# которых не привосходит k. Пары необходимо выводить по одной в строке,
# разделяя пробелами. Каждая пара должна быть выведена 1 раз(перестановка
# чисел новую пару не дает).
# 300 ->> 220 284

k = int(input())
list1 = list() # В списке будут храниться кортежи, 1й эл значение, 2й сумма его делителей

for i in range(k): # Будемперебирать все значения до k
  summa = 0 # Будет обнавляться после каждой итераци
  for j in range(1, i // 2 + 1): # Перебирает все возможные делители(i делить на j и проверять делиться или нет)
    if i % j == 0:
      summa += j # Увеличиваем на делитель
  list.append(tuple([i, summa])) # Создаем кортеж(tuple) и с промощю списка передаем 2а значения: i-число и сумма делителей 
# Ищем эл которые совподают
for i in range(len(list1)):
  for j in range(i, len(list1)): #
    if i != j and list1[i][0] == list1[j][1] and list1[j][0] == list1[i][1]: # Проверяем, равны ли значение с суммой делителей
      print(*list1[i])


  # Решение Тимура в одну строку
def summa_dels(num):
  res = 0
  for i in range(1, num): # Ввыподит сумму всех делителей данного числа
    if num % i == 0:
      res += i
  return res

k = int(input("До какого числа будем анализировать: "))

res =[]

for m in range(1, k + 1):
  n = summa_dels(m)
  if summa_dels(n) == m and n > m:
    res.append((n, m))
print(*res)


  # Решение в одну строку
def summa_dels(num):
  res = 0
  for i in range(1, num):
    if num % i == 0:
      res += i
  return res

k = int(input("До какого числа будем анализировать: "))

print([(m, n) for m in range(1, k + 1) if summa_dels(n := summa_dels(m)) == m and n > m])

# Без моржевого оператора :=
print([(m, summa_dels(m)) for m in range(1, k + 1) if summa_dels(summa_dels(m)) == m and summa_dels(m) > m])